// <auto-generated />
using EmbalagemLojaApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmbalagemLojaApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250529132605_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmbalagemLojaApi.Models.Caixa", b =>
                {
                    b.Property<string>("CaixaId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CaixaId");

                    b.ToTable("Caixas");
                });

            modelBuilder.Entity("EmbalagemLojaApi.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "pedido_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"));

                    b.HasKey("PedidoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("EmbalagemLojaApi.Models.Produto", b =>
                {
                    b.Property<string>("ProdutoID")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "produto_id");

                    b.Property<string>("CaixaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("ProdutoID");

                    b.HasIndex("CaixaId");

                    b.HasIndex("PedidoId");

                    b.ToTable("Produtos");

                    b.HasAnnotation("Relational:JsonPropertyName", "produtos");
                });

            modelBuilder.Entity("EmbalagemLojaApi.Models.Produto", b =>
                {
                    b.HasOne("EmbalagemLojaApi.Models.Caixa", null)
                        .WithMany("Produtos")
                        .HasForeignKey("CaixaId");

                    b.HasOne("EmbalagemLojaApi.Models.Pedido", null)
                        .WithMany("Produtos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("EmbalagemLojaApi.Models.Dimensoes", "Dimensoes", b1 =>
                        {
                            b1.Property<string>("ProdutoID")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Altura")
                                .HasColumnType("int");

                            b1.Property<int>("Comprimento")
                                .HasColumnType("int");

                            b1.Property<int>("Largura")
                                .HasColumnType("int");

                            b1.HasKey("ProdutoID");

                            b1.ToTable("Produtos");

                            b1.HasAnnotation("Relational:JsonPropertyName", "dimensoes");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoID");
                        });

                    b.Navigation("Dimensoes")
                        .IsRequired();
                });

            modelBuilder.Entity("EmbalagemLojaApi.Models.Caixa", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("EmbalagemLojaApi.Models.Pedido", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
